#!/usr/bin/env bash
set -e

# Brewfileからパッケージをインストール（初回のみ）

echo "=== Installing Homebrew packages from Brewfile ==="

# Homebrewのパスを設定
if [ -f "/opt/homebrew/bin/brew" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -f "/usr/local/bin/brew" ]; then
    eval "$(/usr/local/bin/brew shellenv)"
elif [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
elif [ -f "$HOME/.linuxbrew/bin/brew" ]; then
    eval "$($HOME/.linuxbrew/bin/brew shellenv)"
fi

# Brewfileからパッケージをインストール
if [ -f "$HOME/.Brewfile" ]; then
    echo "Installing packages from Brewfile..."
    
    # ARM64 Linux環境での特別な処理
    if [ "$(uname)" == "Linux" ] && [ "$(uname -m)" == "aarch64" ]; then
        echo "⚠️  Note: Running on ARM64 Linux. Some packages may need to be built from source."
        echo "    This may take longer than usual."
        
        # brew bundleを実行（エラーが発生しても続行）
        brew bundle --global || {
            echo "⚠️  Some packages failed to install. This is expected on ARM64 Linux."
            echo "    Attempting to install failed packages from source..."
            
            # 失敗しやすいパッケージをソースからインストール
            for pkg in aqua fzf gh ghq; do
                if ! command -v $pkg &> /dev/null; then
                    echo "Attempting to build $pkg from source..."
                    brew install --build-from-source $pkg 2>/dev/null || {
                        echo "⚠️  Failed to install $pkg. This package may not be critical."
                        
                        # ghの場合は代替インストール方法を提案
                        if [ "$pkg" = "gh" ]; then
                            echo "   Alternative: You can install gh directly from https://github.com/cli/cli/releases"
                            echo "   or use: curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg"
                        fi
                    }
                fi
            done
            
            # xdg-ninjaは依存関係の問題があるのでスキップ
            echo "⚠️  Skipping xdg-ninja on ARM64 Linux due to dependency issues."
        }
    else
        # その他の環境では通常通り実行
        brew bundle --global
    fi
    
    echo "✓ Homebrew package installation completed"
else
    echo "❌ Error: Brewfile not found at ~/.Brewfile"
    exit 1
fi

# aqua用のパスを設定（まだ設定されていない場合のみ）
if [[ ":$PATH:" != *":$HOME/.local/share/aquaproj-aqua/bin:"* ]]; then
    export PATH="$HOME/.local/share/aquaproj-aqua/bin:$PATH"
fi

# Aquaがインストールされている場合はaquaのパッケージもインストール
if command -v aqua &> /dev/null; then
    # AQUA_CONFIGが設定されていない場合、一時的に設定
    if [ -z "$AQUA_CONFIG" ]; then
        export AQUA_CONFIG="$HOME/.config/aqua/aqua.yaml"
    fi
    
    if [ -f "$AQUA_CONFIG" ]; then
        echo "Installing aqua packages..."
        aqua i -a || {
            echo "⚠️  Aqua package installation failed. This is not critical."
        }
    else
        echo "⚠️  Aqua configuration not found at: $AQUA_CONFIG"
        echo "    Skipping aqua package installation."
    fi
fi